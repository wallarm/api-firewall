// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/platform/proxy/wsClient.go

// Package proxy is a generated GoMock package.
package proxy

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	fasthttp "github.com/valyala/fasthttp"
)

// MockWebSocketClient is a mock of WebSocketClient interface.
type MockWebSocketClient struct {
	ctrl     *gomock.Controller
	recorder *MockWebSocketClientMockRecorder
}

// MockWebSocketClientMockRecorder is the mock recorder for MockWebSocketClient.
type MockWebSocketClientMockRecorder struct {
	mock *MockWebSocketClient
}

// NewMockWebSocketClient creates a new mock instance.
func NewMockWebSocketClient(ctrl *gomock.Controller) *MockWebSocketClient {
	mock := &MockWebSocketClient{ctrl: ctrl}
	mock.recorder = &MockWebSocketClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebSocketClient) EXPECT() *MockWebSocketClientMockRecorder {
	return m.recorder
}

// GetConn mocks base method.
func (m *MockWebSocketClient) GetConn(ctx *fasthttp.RequestCtx) (*FastHTTPWebSocketConn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConn", ctx)
	ret0, _ := ret[0].(*FastHTTPWebSocketConn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConn indicates an expected call of GetConn.
func (mr *MockWebSocketClientMockRecorder) GetConn(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConn", reflect.TypeOf((*MockWebSocketClient)(nil).GetConn), ctx)
}
